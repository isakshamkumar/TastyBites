{"ast":null,"code":"import _slicedToArray from\"C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from'react';import CartContext from'./cart-context';import{jsx as _jsx}from\"react/jsx-runtime\";export default function CartProvider(props){var defaultCartState={items:[],totalAmount:0};console.log('provider');var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{//initially sirf updated total amount and updated items hi daal rhe thae\nupdatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type==='REMOVE'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}if(action.type==='CLEAR'){return defaultCartState;}return defaultCartState;};var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD',item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var clearCartHandler=function clearCartHandler(){dispatchCartAction({type:'CLEAR'});};var cartContext={// items:[], //this items is hardcoded but we want to it to change and hence change for all componenets wrapped in context\nitems:cartState.items,// totalAmount:0,\ntotalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler,clearCart:clearCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});}","map":{"version":3,"names":["React","useReducer","CartContext","jsx","_jsx","CartProvider","props","defaultCartState","items","totalAmount","console","log","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","_objectSpread","_toConsumableArray","concat","existingItem","filter","_useReducer","_useReducer2","_slicedToArray","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","Provider","value","children"],"sources":["C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\nimport CartContext from './cart-context'\r\n\r\nexport default function CartProvider(props) {\r\n  const defaultCartState={\r\n    items:[],\r\n    totalAmount:0\r\n  }\r\n  console.log('provider')\r\n  const cartReducer =(state, action)=>{\r\n    if(action.type==='ADD'){\r\n      const updatedTotalAmount =state.totalAmount + action.item.price * action.item.amount;\r\n      const existingCartItemIndex=state.items.findIndex((item)=> item.id===action.item.id)\r\n      const existingCartItem=state.items[existingCartItemIndex];\r\n      let updatedItems;\r\n      if(existingCartItem){\r\n        \r\n        const updatedItem={\r\n          ...existingCartItem,\r\n          amount:existingCartItem.amount+ action.item.amount\r\n        }\r\n        updatedItems=[...state.items];\r\n        updatedItems[existingCartItemIndex]=updatedItem;\r\n      }\r\n      else{\r\n  //initially sirf updated total amount and updated items hi daal rhe thae\r\n       updatedItems=state.items.concat(action.item)\r\n      }\r\n      return {\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n      }\r\n    }\r\n    if(action.type==='REMOVE'){\r\n      const existingCartItemIndex=state.items.findIndex((item)=> item.id===action.id)\r\n      const existingItem=state.items[existingCartItemIndex];\r\n      const updatedTotalAmount=state.totalAmount-existingItem.price;\r\n      let updatedItems;\r\n      if(existingItem.amount===1){\r\n        updatedItems=state.items.filter((item)=> item.id!==action.id)\r\n  \r\n      }\r\n      else{\r\n        const updatedItem={...existingItem,amount:existingItem.amount-1}\r\n        updatedItems=[...state.items]\r\n        updatedItems[existingCartItemIndex]=updatedItem\r\n      }\r\n      return{\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n      }\r\n    }\r\n    if(action.type==='CLEAR'){\r\n      return defaultCartState;\r\n      \r\n    }\r\n    return defaultCartState\r\n  }\r\n  const [cartState, dispatchCartAction]=useReducer(cartReducer,defaultCartState)\r\n    const addItemToCartHandler=(item)=>{\r\n      dispatchCartAction({type:'ADD',item:item})\r\n    }\r\n    const removeItemFromCartHandler=(id)=>{\r\n      dispatchCartAction({type:'REMOVE',id:id})\r\n    }\r\n    const clearCartHandler=()=>{\r\n      dispatchCartAction({type:'CLEAR'})\r\n    }\r\n    const cartContext ={\r\n        // items:[], //this items is hardcoded but we want to it to change and hence change for all componenets wrapped in context\r\n        items: cartState.items,\r\n        // totalAmount:0,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler,\r\n        clearCart:clearCartHandler\r\n    }\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}