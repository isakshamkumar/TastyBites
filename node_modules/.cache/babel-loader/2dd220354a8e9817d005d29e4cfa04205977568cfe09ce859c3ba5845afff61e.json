{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksaks\\\\OneDrive\\\\Desktop\\\\react_udemy\\\\after-side-effects-food-order-app\\\\src\\\\Components\\\\UI\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input(props) {\n  return (\n    /*#__PURE__*/\n    //we are assuming that we will get a input object as a prop with keys like type,id,label,etc\n    // {type:'text'}\n    _jsxDEV(\"div\", {\n      className: classes.input,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.input.id,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...props.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","Input","props","className","input","children","htmlFor","id","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/src/Components/UI/Input.js"],"sourcesContent":["import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    //we are assuming that we will get a input object as a prop with keys like type,id,label,etc\r\n    // {type:'text'}\r\n    <div className={classes.input}>\r\n        <label htmlFor={props.input.id}>{props.label}</label>\r\n        {/* <input type=\"\" name=\"\" id=\"\" /> */}\r\n        {/* <input id={props.input.id} {...props.input} /> */}\r\n        {/* now note the above one is also correct, it means that id has to be same as html for in label so the is we are gettinh in input onject is passed,.. now this ... spread operator basically means all other properties/keys of this object i.e type,label etc is being extracted like {type:'text'}  */}\r\n        <input {...props.input} />\r\n        {/* now this one is more specific, it basically means we dont have to write id=.. coz we are getting it in soread operator on input object */}\r\n      \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EACnC;IAAA;IACE;IACA;IACAF,OAAA;MAAKG,SAAS,EAAEL,OAAO,CAACM,KAAM;MAAAC,QAAA,gBAC1BL,OAAA;QAAOM,OAAO,EAAEJ,KAAK,CAACE,KAAK,CAACG,EAAG;QAAAF,QAAA,EAAEH,KAAK,CAACM;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAIrDZ,OAAA;QAAA,GAAWE,KAAK,CAACE;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGzB;EAAC;AAEV;AAACC,EAAA,GAduBZ,KAAK;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}