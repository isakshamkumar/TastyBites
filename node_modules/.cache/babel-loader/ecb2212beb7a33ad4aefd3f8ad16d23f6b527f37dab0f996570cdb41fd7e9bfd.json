{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksaks\\\\OneDrive\\\\Desktop\\\\react_udemy\\\\after-side-effects-food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  return defaultCartState;\n};\nexport default function CartProvider(props) {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {};\n  const removeItemFromCartHandler = id => {};\n  const cartContext = {\n    // items:[], //this items is hardcoded but we want to it to change and hence change for all componenets wrapped in context\n    items: cartState.items,\n    // totalAmount:0,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react'\r\nimport CartContext from './cart-context'\r\nconst defaultCartState={\r\n  items:[],\r\n  totalAmount:0\r\n}\r\nconst cartReducer =(state, action)=>{\r\n  return defaultCartState\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n  const [cartState, dispatchCartAction]=useReducer(cartReducer,defaultCartState)\r\n    const addItemToCartHandler=(item)=>{}\r\n    const removeItemFromCartHandler=(id)=>{}\r\n    const cartContext ={\r\n        // items:[], //this items is hardcoded but we want to it to change and hence change for all componenets wrapped in context\r\n        items: cartState.items,\r\n        // totalAmount:0,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler\r\n    }\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,gBAAgB,GAAC;EACrBC,KAAK,EAAC,EAAE;EACRC,WAAW,EAAC;AACd,CAAC;AACD,MAAMC,WAAW,GAAEA,CAACC,KAAK,EAAEC,MAAM,KAAG;EAClC,OAAOL,gBAAgB;AACzB,CAAC;AAED,eAAe,SAASM,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAACd,UAAU,CAACO,WAAW,EAACH,gBAAgB,CAAC;EAC5E,MAAMW,oBAAoB,GAAEC,IAAI,IAAG,CAAC,CAAC;EACrC,MAAMC,yBAAyB,GAAEC,EAAE,IAAG,CAAC,CAAC;EACxC,MAAMC,WAAW,GAAE;IACf;IACAd,KAAK,EAAEQ,SAAS,CAACR,KAAK;IACtB;IACAC,WAAW,EAACO,SAAS,CAACP,WAAW;IACjCc,OAAO,EAACL,oBAAoB;IAC5BM,UAAU,EAACJ;EACf,CAAC;EACH,oBACEd,OAAA,CAACF,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACpCb,KAAK,CAACa;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE3B;AAAChB,EAAA,CAjBuBF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}