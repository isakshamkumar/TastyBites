{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksaks\\\\OneDrive\\\\Desktop\\\\react_udemy\\\\after-side-effects-food-order-app\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setformInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredcity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredcityIsValid = !isEmpty(enteredcity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    //this object to render conditionally individual input checking\n    setformInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredcityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredPostalCodeIsValid && enteredStreetIsValid && enteredcityIsValid;\n    //now we gonna submit this data in cart coz there we have access to the items \n\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredcity,\n      postalCode: enteredPostalCode\n    });\n  };\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  console.log('checkout.js');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"GZOGhWt55CbwdMXRkNmm2MUFEUs=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputsValidity","setformInputsValidity","name","street","city","postalCode","confirmHandler","event","preventDefault","enteredName","nameInputRef","current","enteredStreet","streetInputRef","enteredPostalCode","postalCodeInputRef","enteredcity","cityInputRef","enteredNameIsValid","enteredStreetIsValid","enteredcityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","console","log","className","form","onSubmit","children","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/src/Components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5;\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setformInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    })\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredcity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredcityIsValid = !isEmpty(enteredcity)\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\r\n//this object to render conditionally individual input checking\r\n        setformInputsValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredcityIsValid,\r\n            postalCode: enteredPostalCodeIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredPostalCodeIsValid && enteredStreetIsValid && enteredcityIsValid;\r\n//now we gonna submit this data in cart coz there we have access to the items \r\n\r\n\r\n        if (!formIsValid) {\r\n           return;\r\n        }\r\n        props.onConfirm({\r\n            name:enteredName,\r\n            street:enteredStreet,\r\n            city:enteredcity,\r\n            postalCode:enteredPostalCode\r\n        })\r\n\r\n\r\n    };\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n    console.log('checkout.js');\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={`${classes.control} ${formInputsValidity.name?'':classes.invalid}`}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.street?'':classes.invalid}`}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n                {!formInputsValidity.street && <p>Please enter a valid street address</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.postalCode?'':classes.invalid}`}>\r\n                <label htmlFor='postal'>Postal Code</label>\r\n                <input type='text' id='postal' ref={postalCodeInputRef} />\r\n                {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.city?'':classes.invalid}`}>\r\n                <label htmlFor='city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please enter a valid city</p>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}