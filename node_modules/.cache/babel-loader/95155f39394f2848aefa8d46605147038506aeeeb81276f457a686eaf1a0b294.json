{"ast":null,"code":"import _slicedToArray from\"C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setformInputsValidity=_useState2[1];var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredcity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredcityIsValid=!isEmpty(enteredcity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);//this object to render conditionally individual input checking\nsetformInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredcityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredPostalCodeIsValid&&enteredStreetIsValid&&enteredcityIsValid;//now we gonna submit this data in cart coz there we have access to the items \nif(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredcity,postalCode:enteredPostalCode});};var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();console.log('checkout.js');return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(formInputsValidity.name?'':classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(formInputsValidity.street?'':classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street address\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(formInputsValidity.postalCode?'':classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Postal Code\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(formInputsValidity.city?'':classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid city\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","street","city","postalCode","_useState2","_slicedToArray","formInputsValidity","setformInputsValidity","confirmHandler","event","preventDefault","enteredName","nameInputRef","current","enteredStreet","streetInputRef","enteredPostalCode","postalCodeInputRef","enteredcity","cityInputRef","enteredNameIsValid","enteredStreetIsValid","enteredcityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","console","log","className","form","onSubmit","children","concat","control","invalid","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["C:/Users/ksaks/OneDrive/Desktop/react_udemy/after-side-effects-food-order-app/src/Components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5;\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setformInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true\r\n    })\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredcity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredcityIsValid = !isEmpty(enteredcity)\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\r\n//this object to render conditionally individual input checking\r\n        setformInputsValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            city: enteredcityIsValid,\r\n            postalCode: enteredPostalCodeIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredPostalCodeIsValid && enteredStreetIsValid && enteredcityIsValid;\r\n//now we gonna submit this data in cart coz there we have access to the items \r\n\r\n\r\n        if (!formIsValid) {\r\n           return;\r\n        }\r\n        props.onConfirm({\r\n            name:enteredName,\r\n            street:enteredStreet,\r\n            city:enteredcity,\r\n            postalCode:enteredPostalCode\r\n        })\r\n\r\n\r\n    };\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n    console.log('checkout.js');\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            <div className={`${classes.control} ${formInputsValidity.name?'':classes.invalid}`}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.street?'':classes.invalid}`}>\r\n                <label htmlFor='street'>Street</label>\r\n                <input type='text' id='street' ref={streetInputRef} />\r\n                {!formInputsValidity.street && <p>Please enter a valid street address</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.postalCode?'':classes.invalid}`}>\r\n                <label htmlFor='postal'>Postal Code</label>\r\n                <input type='text' id='postal' ref={postalCodeInputRef} />\r\n                {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code</p>}\r\n            </div>\r\n            <div className={`${classes.control} ${formInputsValidity.city?'':classes.invalid}`}>\r\n                <label htmlFor='city'>City</label>\r\n                <input type='text' id='city' ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please enter a valid city</p>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"mKAAA,OAASA,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CACxC,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAGC,KAAK,QAAI,CAAAA,KAAK,CAACC,IAAI,CAAC,CAAC,GAAK,EAAE,GAC5C,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAGF,KAAK,QAAI,CAAAA,KAAK,CAACC,IAAI,CAAC,CAAC,CAACE,MAAM,GAAK,CAAC,GACtD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAK,CACxB,IAAAC,SAAA,CAAoDb,QAAQ,CAAC,CACzDc,IAAI,CAAE,IAAI,CACVC,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,IAAI,CACVC,UAAU,CAAE,IAChB,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAN,SAAA,IALKO,kBAAkB,CAAAF,UAAA,IAAEG,qBAAqB,CAAAH,UAAA,IAMhD,GAAM,CAAAI,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,KAAK,CAAK,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAACpB,KAAK,CAC9C,GAAM,CAAAqB,aAAa,CAAGC,cAAc,CAACF,OAAO,CAACpB,KAAK,CAClD,GAAM,CAAAuB,iBAAiB,CAAGC,kBAAkB,CAACJ,OAAO,CAACpB,KAAK,CAC1D,GAAM,CAAAyB,WAAW,CAAGC,YAAY,CAACN,OAAO,CAACpB,KAAK,CAE9C,GAAM,CAAA2B,kBAAkB,CAAG,CAAC5B,OAAO,CAACmB,WAAW,CAAC,CAChD,GAAM,CAAAU,oBAAoB,CAAG,CAAC7B,OAAO,CAACsB,aAAa,CAAC,CACpD,GAAM,CAAAQ,kBAAkB,CAAG,CAAC9B,OAAO,CAAC0B,WAAW,CAAC,CAChD,GAAM,CAAAK,wBAAwB,CAAG5B,WAAW,CAACqB,iBAAiB,CAAC,CACvE;AACQT,qBAAqB,CAAC,CAClBP,IAAI,CAAEoB,kBAAkB,CACxBnB,MAAM,CAAEoB,oBAAoB,CAC5BnB,IAAI,CAAEoB,kBAAkB,CACxBnB,UAAU,CAAEoB,wBAChB,CAAC,CAAC,CAEF,GAAM,CAAAC,WAAW,CAAGJ,kBAAkB,EAAIG,wBAAwB,EAAIF,oBAAoB,EAAIC,kBAAkB,CACxH;AAGQ,GAAI,CAACE,WAAW,CAAE,CACf,OACH,CACA1B,KAAK,CAAC2B,SAAS,CAAC,CACZzB,IAAI,CAACW,WAAW,CAChBV,MAAM,CAACa,aAAa,CACpBZ,IAAI,CAACgB,WAAW,CAChBf,UAAU,CAACa,iBACf,CAAC,CAAC,CAGN,CAAC,CACD,GAAM,CAAAJ,YAAY,CAAG3B,MAAM,CAAC,CAAC,CAC7B,GAAM,CAAA8B,cAAc,CAAG9B,MAAM,CAAC,CAAC,CAC/B,GAAM,CAAAgC,kBAAkB,CAAGhC,MAAM,CAAC,CAAC,CACnC,GAAM,CAAAkC,YAAY,CAAGlC,MAAM,CAAC,CAAC,CAC7ByC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC,CAC1B,mBACIpC,KAAA,SAAMqC,SAAS,CAAEzC,OAAO,CAAC0C,IAAK,CAACC,QAAQ,CAAEtB,cAAe,CAAAuB,QAAA,eACpDxC,KAAA,QAAKqC,SAAS,IAAAI,MAAA,CAAK7C,OAAO,CAAC8C,OAAO,MAAAD,MAAA,CAAI1B,kBAAkB,CAACN,IAAI,CAAC,EAAE,CAACb,OAAO,CAAC+C,OAAO,CAAG,CAAAH,QAAA,eAC/E1C,IAAA,UAAO8C,OAAO,CAAC,MAAM,CAAAJ,QAAA,CAAC,WAAS,CAAO,CAAC,cACvC1C,IAAA,UAAO+C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAACC,GAAG,CAAE1B,YAAa,CAAE,CAAC,CACjD,CAACN,kBAAkB,CAACN,IAAI,eAAIX,IAAA,MAAA0C,QAAA,CAAG,4BAA0B,CAAG,CAAC,EAC7D,CAAC,cACNxC,KAAA,QAAKqC,SAAS,IAAAI,MAAA,CAAK7C,OAAO,CAAC8C,OAAO,MAAAD,MAAA,CAAI1B,kBAAkB,CAACL,MAAM,CAAC,EAAE,CAACd,OAAO,CAAC+C,OAAO,CAAG,CAAAH,QAAA,eACjF1C,IAAA,UAAO8C,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAAC,QAAM,CAAO,CAAC,cACtC1C,IAAA,UAAO+C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,QAAQ,CAACC,GAAG,CAAEvB,cAAe,CAAE,CAAC,CACrD,CAACT,kBAAkB,CAACL,MAAM,eAAIZ,IAAA,MAAA0C,QAAA,CAAG,qCAAmC,CAAG,CAAC,EACxE,CAAC,cACNxC,KAAA,QAAKqC,SAAS,IAAAI,MAAA,CAAK7C,OAAO,CAAC8C,OAAO,MAAAD,MAAA,CAAI1B,kBAAkB,CAACH,UAAU,CAAC,EAAE,CAAChB,OAAO,CAAC+C,OAAO,CAAG,CAAAH,QAAA,eACrF1C,IAAA,UAAO8C,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAAC,aAAW,CAAO,CAAC,cAC3C1C,IAAA,UAAO+C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,QAAQ,CAACC,GAAG,CAAErB,kBAAmB,CAAE,CAAC,CACzD,CAACX,kBAAkB,CAACH,UAAU,eAAId,IAAA,MAAA0C,QAAA,CAAG,kCAAgC,CAAG,CAAC,EACzE,CAAC,cACNxC,KAAA,QAAKqC,SAAS,IAAAI,MAAA,CAAK7C,OAAO,CAAC8C,OAAO,MAAAD,MAAA,CAAI1B,kBAAkB,CAACJ,IAAI,CAAC,EAAE,CAACf,OAAO,CAAC+C,OAAO,CAAG,CAAAH,QAAA,eAC/E1C,IAAA,UAAO8C,OAAO,CAAC,MAAM,CAAAJ,QAAA,CAAC,MAAI,CAAO,CAAC,cAClC1C,IAAA,UAAO+C,IAAI,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAACC,GAAG,CAAEnB,YAAa,CAAE,CAAC,CACjD,CAACb,kBAAkB,CAACJ,IAAI,eAAIb,IAAA,MAAA0C,QAAA,CAAG,2BAAyB,CAAG,CAAC,EAC5D,CAAC,cACNxC,KAAA,QAAKqC,SAAS,CAAEzC,OAAO,CAACoD,OAAQ,CAAAR,QAAA,eAC5B1C,IAAA,WAAQ+C,IAAI,CAAC,QAAQ,CAACI,OAAO,CAAE1C,KAAK,CAAC2C,QAAS,CAAAV,QAAA,CAAC,QAE/C,CAAQ,CAAC,cACT1C,IAAA,WAAQuC,SAAS,CAAEzC,OAAO,CAACuD,MAAO,CAAAX,QAAA,CAAC,SAAO,CAAQ,CAAC,EAClD,CAAC,EACJ,CAAC,CAEf,CAAC,CAED,cAAe,CAAAlC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}